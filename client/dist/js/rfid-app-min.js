function runApp(e,r,n,t){e.globals=t.globals||{},e.globals.currentUser&&(n.defaults.headers.common.Authorization="Basic "+e.globals.currentUser.authData),e.$on("$locationChangeStart",function(){"/login"==r.path()||e.globals.currentUser||r.path("/login")}),e.$on("authFailed",function(){r.path("/login")})}function configApp(e){e.interceptors.push("AuthHttpInterceptor")}angular.module("app",["ngRoute","ngResource","ngFileSaver","toastr","ngStorage"]).run(runApp).config(configApp),runApp.$inject=["$rootScope","$location","$http","$sessionStorage"],configApp.$inject=["$httpProvider"],function(){"use strict";function e(e,r){var n=this;n.logout=function(){e.url("/login")},n.isLoggedIn=function(){return r.isLoggedIn()}}angular.module("app").controller("IndexController",e),e.$inject=["$location","AuthService"]}(),function(){"use strict";function e(e,r,n){function t(t){return"/login"!=r.path()&&401==t.status&&n.$broadcast("authFailed"),e.reject(t)}return{responseError:t}}angular.module("app").factory("AuthHttpInterceptor",e),e.$inject=["$q","$location","$rootScope"]}(),function(){"use strict";function e(e,r,n,t,s,o){function a(r,n){var t=o.encode(r+":"+n),s=e(g,{userId:"@id"},{get:{method:"GET",headers:{Authorization:"Basic "+t}}});return s.get({userId:r})}function i(e,r,a){var i=o.encode(e+":"+r);n.defaults.headers.common.Authorization="Basic "+i,t.globals={currentUser:{username:e,authData:i,isAdmin:a}},s.globals=t.globals}function u(){n.defaults.headers.common.Authorization="Basic ",t.globals={},delete s.globals}function c(){return!!t.globals.currentUser}function d(){return t.globals.currentUser?t.globals.currentUser.isAdmin:!1}function l(){return t.globals.currentUser?t.globals.currentUser.username:""}var g="//"+r.host()+":"+r.port()+"/api/users/:userId";return{loginUser:a,saveCredentials:i,clearCredentials:u,isLoggedIn:c,isAdmin:d,username:l}}angular.module("app").factory("AuthService",e),e.$inject=["$resource","$location","$http","$rootScope","$sessionStorage","Base64"]}(),function(){"use strict";function e(){function e(e){var r,t,s,o,a,i="",u="",c="",d=0;do r=e.charCodeAt(d++),t=e.charCodeAt(d++),u=e.charCodeAt(d++),s=r>>2,o=(3&r)<<4|t>>4,a=(15&t)<<2|u>>6,c=63&u,isNaN(t)?a=c=64:isNaN(u)&&(c=64),i=i+n.charAt(s)+n.charAt(o)+n.charAt(a)+n.charAt(c),r=t=u="",s=o=a=c="";while(d<e.length);return i}function r(e){var r,t,s,o,a,i="",u="",c="",d=0,l=/[^A-Za-z0-9\+\/\=]/g;l.exec(e)&&console.log("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding."),e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");do s=n.indexOf(e.charAt(d++)),o=n.indexOf(e.charAt(d++)),a=n.indexOf(e.charAt(d++)),c=n.indexOf(e.charAt(d++)),r=s<<2|o>>4,t=(15&o)<<4|a>>2,u=(3&a)<<6|c,i+=String.fromCharCode(r),64!=a&&(i+=String.fromCharCode(t)),64!=c&&(i+=String.fromCharCode(u)),r=t=u="",s=o=a=c="";while(d<e.length);return i}var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";return{encode:e,decode:r}}angular.module("app").factory("Base64",e)}(),function(){"use strict";function e(e,r,n){var t=this;r.clearCredentials(),t.username="",t.password="",t.loading=!1,t.login=function(){t.loading=!0;var s=r.loginUser(t.username,t.password);s.$promise.then(function(){r.saveCredentials(t.username,t.password,s.admin),e.path("/")},function(e){t.loading=!1;var r="Unable to login at this time.";401==e.status&&(r="Incorrect username or password"),n.error(r,"Login Failed")})}}angular.module("app").controller("LoginController",e),e.$inject=["$location","AuthService","toastr"]}(),function(){"use strict";function e(e,r){function n(){var r=e(i);return r.get()}function t(r){var n=e(i,{userId:"@id"});return n.get({userId:r})}function s(r){var n=e(i);return n.save(r)}function o(r,n,t){var s=e(i,{userId:"@id"},{save:{method:"PATCH",headers:{"If-Match":n}}});return s.save({userId:r},t)}function a(r,n){var t=e(i,{userId:"@id"},{remove:{method:"DELETE",headers:{"If-Match":n}}});return t.remove({userId:r})}var i="//"+r.host()+":"+r.port()+"/api/users/:userId";return{getUsers:n,getUser:t,addUser:s,saveUser:o,removeUser:a}}angular.module("app").factory("UserService",e),e.$inject=["$resource","$location"]}(),function(){"use strict";function e(e,r,n){function t(){s.loading=!0,s.errorLoading=!1;var e=r.getUsers();e.$promise.then(function(){s.loading=!1,s.errorLoading=!1,s.users=e._items},function(){s.loading=!1,s.errorLoading=!0})}var s=this;s.users=[],t(),s.refresh=function(){t()},s.removeUser=function o(n){if(!n.removing){n.removing=!0;var o=r.removeUser(n.id,n._etag);o.$promise.then(function(){e.success("User successfully removed!"),t()},function(r){n.removing=!1;var s="Unable to remove user at this time.";404==r.status?s="This user no longer exists.":412==r.status&&(s="This user has changed since it was loaded."),e.error(s,"Error Removing User"),t()})}},s.isAdmin=function(){return n.isAdmin()}}angular.module("app").controller("UserController",e),e.$inject=["toastr","UserService","AuthService"]}(),function(){"use strict";function e(e,r,n){var t=this;t.username="",t.password="",t.isAdmin=!1,t.adding=!1,t.addUser=function(){t.adding=!0;var s=n.addUser({username:t.username,password:t.password,admin:t.isAdmin});s.$promise.then(function(){r.success("User successfully added!"),e.path("users")},function(e){t.adding=!1;var n="Unable add new user at this time.";if(e.data&&e.data._issues&&e.data._issues.username){var s=e.data._issues.username;-1!=s.indexOf("unique")&&(n="This username already exists. Change the username and try again.")}r.error(n,"Error Adding User")})}}angular.module("app").controller("AddUserController",e),e.$inject=["$location","toastr","UserService"]}(),function(){"use strict";function e(e,r,n,t){function s(){var s=t.getUser(e.userId);s.$promise.then(function(){o.id=s._id,o.etag=s._etag,o.username=s.username,o.oldUsername=s.username,o.isAdmin=s.admin},function(e){var t="Unable to edit user at this time.";404==e.status&&(t="This user no longer exists."),n.error(t,"Error Loading User"),r.path("users")})}var o=this;o.saving=!1,s(),o.saveUser=function(){o.saving=!0;var e={admin:o.isAdmin};o.username!=o.oldUsername&&(e.username=o.username);var a=t.saveUser(o.id,o.etag,e);a.$promise.then(function(){n.success("User saved!"),r.path("users")},function(e){o.saving=!1;var r="Unable to save user at this time.";if(404==e.status)r="This user no longer exists.";else if(412==e.status)r="This user has changed since it was loaded.";else if(e.data&&e.data._issues&&e.data._issues.username){var t=e.data._issues.username;-1!=t.indexOf("unique")&&(r="This username already exists. Change the username and try again.")}n.error(r,"Error Saving User"),s()})}}angular.module("app").controller("EditUserController",e),e.$inject=["$routeParams","$location","toastr","UserService"]}(),function(){"use strict";function e(e,r){function n(){var r=e(i);return r.get()}function t(r){var n=e(i,{resourceId:"@id"});return n.get({resourceId:r})}function s(r){var n=e(i);return n.save(r)}function o(r,n,t){var s=e(i,{resourceId:"@id"},{save:{method:"PATCH",headers:{"If-Match":n}}});return s.save({resourceId:r},t)}function a(r,n){var t=e(i,{resourceId:"@id"},{remove:{method:"DELETE",headers:{"If-Match":n}}});return t.remove({resourceId:r})}var i="//"+r.host()+":"+r.port()+"/api/resources/:resourceId";return{getResources:n,getResource:t,addResource:s,saveResource:o,removeResource:a}}angular.module("app").factory("ResourceService",e),e.$inject=["$resource","$location"]}(),function(){"use strict";function e(e,r,n){function t(){s.loading=!0,s.errorLoading=!1;var e=r.getResources();e.$promise.then(function(){s.loading=!1,s.errorLoading=!1,s.resources=e._items},function(){s.loading=!1,s.errorLoading=!0})}var s=this;s.resources=[],t(),s.refresh=function(){t()},s.removeResource=function o(n){if(!n.removing){n.removing=!0;var o=r.removeResource(n.id,n._etag);o.$promise.then(function(){e.success("Resource successfully removed!"),t()},function(r){n.removing=!1;var s="Unable to remove resource at this time.";404==r.status?s="This resource no longer exists.":412==r.status&&(s="This resource has changed since it was loaded."),e.error(s,"Error Removing Resource"),t()})}},s.isAdmin=function(){return n.isAdmin()}}angular.module("app").controller("ResourceController",e),e.$inject=["toastr","ResourceService","AuthService"]}(),function(){"use strict";function e(e,r,n,t){function s(){var s=t.getResource(e.resourceId);s.$promise.then(function(){o.id=s._id,o.etag=s._etag,o.name=s.name,o.oldName=s.name},function(e){var t="Unable to edit resource at this time.";404==e.status&&(t="This resource no longer exists."),n.error(t,"Error Loading Resource"),r.path("resources")})}var o=this;o.saving=!1,s(),o.saveResource=function(){o.saving=!0;var e=t.saveResource(o.id,o.etag,{name:o.name});e.$promise.then(function(){n.success("Resource saved!"),r.path("resources")},function(e){o.saving=!1;var r="Unable to save resource at this time.";if(404==e.status)r="This resource no longer exists.";else if(412==e.status)r="This resource has changed since it was loaded.";else if(e.data&&e.data._issues&&e.data._issues.name){var t=e.data._issues.name;-1!=t.indexOf("unique")&&(r="This resource name already exists. Change the name and try again.")}n.error(r,"Error Saving Resource"),s()})}}angular.module("app").controller("EditResourceController",e),e.$inject=["$routeParams","$location","toastr","ResourceService"]}(),function(){"use strict";function e(e,r,n){var t=this;t.name="",t.adding=!1,t.addResource=function(){t.adding=!0;var s=n.addResource({name:t.name});s.$promise.then(function(){r.success("Resource successfully added!"),e.path("resources")},function(e){t.adding=!1;var n="Unable add new resource at this time.";if(e.data&&e.data._issues&&e.data._issues.name){var s=e.data._issues.name;-1!=s.indexOf("unique")&&(n="This resource name already exists. Change the name and try again.")}r.error(n,"Error Adding Resource")})}}angular.module("app").controller("AddResourceController",e),e.$inject=["$location","toastr","ResourceService"]}(),function(){"use strict";function e(e,r,n,t,s){function o(){var s=t.getUser(e.userId);s.$promise.then(function(){a.id=s._id,a.etag=s._etag,a.username=s.username,a.isAdmin=s.admin},function(e){var t="Unable to change password at this time.";404==e.status&&(t="This user no longer exists."),n.error(t,"Error Loading User"),r.path("users")})}var a=this;a.saving=!1,o(),a.changePassword=function(){a.saving=!0;var e={password:a.password},i=t.saveUser(a.id,a.etag,e);i.$promise.then(function(){n.success("Password changed!"),s.username()==a.username&&s.saveCredentials(a.username,a.password,a.isAdmin),r.path("users")},function(e){a.saving=!1;var r="Unable to change password at this time.";404==e.status?r="This user no longer exists.":412==e.status&&(r="This user has changed since it was loaded."),n.error(r,"Error Changing Password"),o()})}}angular.module("app").controller("ChangeUserPasswordController",e),e.$inject=["$routeParams","$location","toastr","UserService","AuthService"]}(),function(){"use strict";function e(e,r){function n(){var r=e(a);return r.get()}function t(r){var n=e(a,{cardId:"@id"});return n.get({cardId:r})}function s(r,n,t){var s=e(a,{cardId:"@id"},{save:{method:"PATCH",headers:{"If-Match":n}}});return s.save({cardId:r},t)}function o(r,n){var t=e(a,{cardId:"@id"},{remove:{method:"DELETE",headers:{"If-Match":n}}});return t.remove({cardId:r})}var a="//"+r.host()+":"+r.port()+"/api/cards/:cardId";return{getCards:n,getCard:t,saveCard:s,removeCard:o}}angular.module("app").factory("CardService",e),e.$inject=["$resource","$location"]}(),function(){"use strict";function e(e,r,n,t){function s(){var e=r.getCards();e.$promise.then(function(){a.loading=!1;for(var r=e._items,n=0;n<r.length;n++){var t=r[n].resources.split(",");r[n].resources=t}a.cards=r},function(){a.loading=!1,a.errorLoading=!0})}function o(){a.loading=!0,a.errorLoading=!1;var e=n.getResources();e.$promise.then(function(){var r=e._items;a.resourceNames=[];for(var n=0;n<r.length;n++)a.resourceNames[r[n]._id]=r[n].name;s()},function(){a.loading=!1,a.errorLoading=!0})}var a=this;a.cards=[],a.resourceNames={},o(),a.refresh=function(){o()},a.removeCard=function i(n){if(!n.removing){n.removing=!0;var i=r.removeCard(n.id,n._etag);i.$promise.then(function(){e.success("Card successfully removed!"),o()},function(r){n.removing=!1;var t="Unable to remove card at this time.";404==r.status?t="This card no longer exists.":412==r.status&&(t="This card has changed since it was loaded."),e.error(t,"Error Removing Card"),o()})}},a.isAdmin=function(){return t.isAdmin()}}angular.module("app").controller("CardController",e),e.$inject=["toastr","CardService","ResourceService","AuthService"]}(),function(){"use strict";function e(e,r,n,t,s){function o(){var s=t.getCard(e.cardId);s.$promise.then(function(){i.id=s._id,i.etag=s._etag,i.uuid=s.uuid,i.member=s.member,a(s.resources)},function(e){var t="Unable to edit card at this time.";404==e.status&&(t="This card no longer exists."),n.error(t,"Error Loading Card"),r.path("cards")})}function a(e){var t=s.getResources();t.$promise.then(function(){i.resources=t._items;for(var r=0;r<i.resources.length;r++)-1!=e.indexOf(i.resources[r]._id)?i.resources[r].isAuthorized=!0:i.resources[r].isAuthorized=!1},function(e){n.error("Unable to edit card at this time.","Error Loading Card"),r.path("cards")})}var i=this;i.saving=!1,o(),i.saveCard=function(){i.saving=!0;for(var e=[],s=0;s<i.resources.length;s++)i.resources[s].isAuthorized&&e.push(i.resources[s]._id);var a={member:i.member,resources:e.join(",")},u=t.saveCard(i.id,i.etag,a);u.$promise.then(function(){n.success("Card Saved!"),r.path("cards")},function(e){i.saving=!1;var r="Unable to save card at this time.";404==e.status?r="This card no longer exists.":412==e.status&&(r="This card has changed since it was loaded."),n.error(r,"Error Saving Card"),o()})}}angular.module("app").controller("EditCardController",e),e.$inject=["$routeParams","$location","toastr","CardService","ResourceService"]}(),function(){"use strict";function e(e,r){function n(r){var n=e(s);return n.get({sort:"-_created",page:r})}function t(){var r=e(s);return r.remove()}var s="//"+r.host()+":"+r.port()+"/api/logs/:logId";return{getLogs:n,clearLogs:t}}angular.module("app").factory("LogService",e),e.$inject=["$resource","$location"]}(),function(){"use strict";function e(e,r,n,t,s){function o(){i.loading=!0,i.errorLoading=!1;var e=t.getLogs(i.page);e.$promise.then(function(){i.loading=!1,i.errorLoading=!1,i.logs=e._items;for(var r=0;r<i.logs.length;r++){var n=new Date(i.logs[r]._created);i.logs[r].date=n.toLocaleDateString()+" "+n.toLocaleTimeString()}i.lastPage=e._meta.max_results*i.page>=e._meta.total?!0:!1},function(){i.loading=!1,i.errorLoading=!0})}function a(){for(var e="Date,UUID,Member,Resource,Status\n",r=0;r<i.logs.length;r++){var n=i.logs[r];e+=n.date+","+n.uuid.substr(5)+","+n.member+","+n.resource+","+(n.granted?"Success":n.reason)+"\n"}return e}var i=this;i.logs=[],i.page=1,i.clearing=!1,o(),i.refresh=function(){i.page=1,o()},i.isAdmin=function(){return s.isAdmin()},i.newer=function(){i.page>1&&(i.page--,o())},i.older=function(){i.lastPage||(i.page++,o())},i.clearLogs=function u(){if(!i.clearing){i.clearing=!0;var u=t.clearLogs();u.$promise.then(function(){i.clearing=!1,e.success("Logs cleared!"),o()},function(r){i.clearing=!1,e.error("Unable to clear logs at this time."),o()})}},i.saveLogs=function(){var e=a(),t=new n([e],{type:"text/csv;charset=utf-8"});r.saveAs(t,"rfid_logs.csv")}}angular.module("app").controller("LogController",e),e.$inject=["toastr","FileSaver","Blob","LogService","AuthService"]}(),angular.module("app").config(["$routeProvider",function(e){e.when("/",{templateUrl:"views/home.html"}).when("/login",{templateUrl:"views/login.html",controller:"LoginController",controllerAs:"vm"}).when("/users",{templateUrl:"views/users.html",controller:"UserController",controllerAs:"vm"}).when("/adduser",{templateUrl:"views/adduser.html",controller:"AddUserController",controllerAs:"vm"}).when("/edituser/:userId",{templateUrl:"views/edituser.html",controller:"EditUserController",controllerAs:"vm"}).when("/changeuserpassword/:userId",{templateUrl:"views/changeuserpassword.html",controller:"ChangeUserPasswordController",controllerAs:"vm"}).when("/resources",{templateUrl:"views/resources.html",controller:"ResourceController",controllerAs:"vm"}).when("/addresource",{templateUrl:"views/addresource.html",controller:"AddResourceController",controllerAs:"vm"}).when("/editresource/:resourceId",{templateUrl:"views/editresource.html",controller:"EditResourceController",controllerAs:"vm"}).when("/cards",{templateUrl:"views/cards.html",controller:"CardController",controllerAs:"vm"}).when("/editcard/:cardId",{templateUrl:"views/editcard.html",controller:"EditCardController",controllerAs:"vm"}).when("/logs",{templateUrl:"views/logs.html",controller:"LogController",controllerAs:"vm"})}]);