function runApp(e,r,t,n){e.globals=n.globals||{},e.globals.currentUser&&(t.defaults.headers.common.Authorization="Basic "+e.globals.currentUser.authData),e.$on("$locationChangeStart",function(){"/login"==r.path()||e.globals.currentUser||r.path("/login")}),e.$on("authFailed",function(){r.path("/login")})}function configApp(e){e.interceptors.push("AuthHttpInterceptor")}angular.module("app",["ngRoute","ngResource","ngFileSaver","toastr","ngStorage"]).run(runApp).config(configApp),runApp.$inject=["$rootScope","$location","$http","$sessionStorage"],configApp.$inject=["$httpProvider"],function(){"use strict";function e(e,r){this.logout=function(){e.url("/login")},this.isLoggedIn=function(){return r.isLoggedIn()}}angular.module("app").controller("IndexController",e),e.$inject=["$location","AuthService"]}(),function(){"use strict";function e(e,r,t){return{responseError:function(n){"/login"!=r.path()&&401==n.status&&t.$broadcast("authFailed");return e.reject(n)}}}angular.module("app").factory("AuthHttpInterceptor",e),e.$inject=["$q","$location","$rootScope"]}(),function(){"use strict";function e(e,r,t,n,s,o){var a="//"+r.host()+":"+r.port()+"/auth";return{loginUser:function(r,t){return e(a).save({username:r,password:t})},saveCredentials:function(e,r,a){console.log(r);var i=o.encode(r+":");console.log(i),t.defaults.headers.common.Authorization="Basic "+i,n.globals={currentUser:{username:e,authData:i,isAdmin:a}},s.globals=n.globals},clearCredentials:function(){t.defaults.headers.common.Authorization="Basic ",n.globals={},delete s.globals},isLoggedIn:function(){return!!n.globals.currentUser},isAdmin:function(){return!!n.globals.currentUser&&n.globals.currentUser.isAdmin},username:function(){return n.globals.currentUser?n.globals.currentUser.username:""}}}angular.module("app").factory("AuthService",e),e.$inject=["$resource","$location","$http","$rootScope","$sessionStorage","Base64"]}(),function(){"use strict";angular.module("app").factory("Base64",function(){var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";return{encode:function(r){var t,n,s,o,a,i="",u="",c="",l=0;do{s=(t=r.charCodeAt(l++))>>2,o=(3&t)<<4|(n=r.charCodeAt(l++))>>4,a=(15&n)<<2|(u=r.charCodeAt(l++))>>6,c=63&u,isNaN(n)?a=c=64:isNaN(u)&&(c=64),i=i+e.charAt(s)+e.charAt(o)+e.charAt(a)+e.charAt(c),t=n=u="",s=o=a=c=""}while(l<r.length);return i},decode:function(r){var t,n,s,o,a="",i="",u="",c=0;/[^A-Za-z0-9\+\/\=]/g.exec(r)&&console.log("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding.");r=r.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{t=e.indexOf(r.charAt(c++))<<2|(s=e.indexOf(r.charAt(c++)))>>4,n=(15&s)<<4|(o=e.indexOf(r.charAt(c++)))>>2,i=(3&o)<<6|(u=e.indexOf(r.charAt(c++))),a+=String.fromCharCode(t),64!=o&&(a+=String.fromCharCode(n)),64!=u&&(a+=String.fromCharCode(i)),t=n=i="",s=o=u=""}while(c<r.length);return a}}})}(),function(){"use strict";function e(e,r,t){var n=this;r.clearCredentials(),n.username="",n.password="",n.loading=!1,n.login=function(){n.loading=!0;var s=r.loginUser(n.username,n.password);s.$promise.then(function(){r.saveCredentials(n.username,s.token,s.admin),e.path("/")},function(e){n.loading=!1;var r="Unable to login at this time.";401==e.status&&(r="Incorrect username or password"),t.error(r,"Login Failed")})}}angular.module("app").controller("LoginController",e),e.$inject=["$location","AuthService","toastr"]}(),function(){"use strict";function e(e,r){var t="//"+r.host()+":"+r.port()+"/api/users/:userId";return{getUsers:function(r){return e(t).get({page:r})},getUser:function(r){return e(t,{userId:"@id"}).get({userId:r})},addUser:function(r){return e(t).save(r)},saveUser:function(r,n,s){return e(t,{userId:"@id"},{save:{method:"PATCH",headers:{"If-Match":n}}}).save({userId:r},s)},removeUser:function(r,n){return e(t,{userId:"@id"},{remove:{method:"DELETE",headers:{"If-Match":n}}}).remove({userId:r})}}}angular.module("app").factory("UserService",e),e.$inject=["$resource","$location"]}(),function(){"use strict";function e(e,r,t){var n=this;function s(){n.loading=!0,n.errorLoading=!1;var e=r.getUsers(n.page);e.$promise.then(function(){n.loading=!1,n.errorLoading=!1,n.users=e._items,n.lastPage=e._meta.max_results*n.page>=e._meta.total},function(){n.loading=!1,n.errorLoading=!0})}n.users=[],n.page=1,s(),n.refresh=function(){n.page=1,s()},n.next=function(){n.lastPage||(n.page++,s())},n.prev=function(){n.page>1&&(n.page--,s())},n.removeUser=function(t){if(!t.removing){t.removing=!0;var o=r.removeUser(t.id,t._etag);o.$promise.then(function(){e.success("User successfully removed!"),1==n.users.length&&n.page>1&&n.page--,s()},function(r){t.removing=!1;var n="Unable to remove user at this time.";404==r.status?n="This user no longer exists.":412==r.status&&(n="This user has changed since it was loaded."),e.error(n,"Error Removing User"),s()})}},n.isAdmin=function(){return t.isAdmin()}}angular.module("app").controller("UserController",e),e.$inject=["toastr","UserService","AuthService"]}(),function(){"use strict";function e(e,r,t){var n=this;n.username="",n.password="",n.isAdmin=!1,n.adding=!1,n.addUser=function(){n.adding=!0,t.addUser({username:n.username,password:n.password,admin:n.isAdmin}).$promise.then(function(){r.success("User successfully added!"),e.path("users")},function(e){n.adding=!1;var t="Unable add new user at this time.";e.data&&e.data._issues&&e.data._issues.username&&(-1!=e.data._issues.username.indexOf("unique")&&(t="This username already exists. Change the username and try again."));r.error(t,"Error Adding User")})}}angular.module("app").controller("AddUserController",e),e.$inject=["$location","toastr","UserService"]}(),function(){"use strict";function e(e,r,t,n){var s=this;function o(){var o=n.getUser(e.userId);o.$promise.then(function(){s.id=o._id,s.etag=o._etag,s.username=o.username,s.oldUsername=o.username,s.isAdmin=o.admin},function(e){var n="Unable to edit user at this time.";404==e.status&&(n="This user no longer exists."),t.error(n,"Error Loading User"),r.path("users")})}s.saving=!1,o(),s.saveUser=function(){s.saving=!0;var e={admin:s.isAdmin};s.username!=s.oldUsername&&(e.username=s.username),n.saveUser(s.id,s.etag,e).$promise.then(function(){t.success("User saved!"),r.path("users")},function(e){s.saving=!1;var r="Unable to save user at this time.";if(404==e.status)r="This user no longer exists.";else if(412==e.status)r="This user has changed since it was loaded.";else if(e.data&&e.data._issues&&e.data._issues.username){-1!=e.data._issues.username.indexOf("unique")&&(r="This username already exists. Change the username and try again.")}t.error(r,"Error Saving User"),o()})}}angular.module("app").controller("EditUserController",e),e.$inject=["$routeParams","$location","toastr","UserService"]}(),function(){"use strict";function e(e,r){var t="//"+r.host()+":"+r.port()+"/api/resources/:resourceId";return{getResources:function(r){return e(t).get({page:r})},getResource:function(r){return e(t,{resourceId:"@id"}).get({resourceId:r})},addResource:function(r){return e(t).save(r)},saveResource:function(r,n,s){return e(t,{resourceId:"@id"},{save:{method:"PATCH",headers:{"If-Match":n}}}).save({resourceId:r},s)},removeResource:function(r,n){return e(t,{resourceId:"@id"},{remove:{method:"DELETE",headers:{"If-Match":n}}}).remove({resourceId:r})}}}angular.module("app").factory("ResourceService",e),e.$inject=["$resource","$location"]}(),function(){"use strict";function e(e,r,t){var n=this;function s(){n.loading=!0,n.errorLoading=!1;var e=r.getResources(n.page);e.$promise.then(function(){n.loading=!1,n.errorLoading=!1,n.resources=e._items,n.lastPage=e._meta.max_results*n.page>=e._meta.total},function(){n.loading=!1,n.errorLoading=!0})}n.resources=[],n.page=1,s(),n.refresh=function(){n.page=1,s()},n.next=function(){n.lastPage||(n.page++,s())},n.prev=function(){n.page>1&&(n.page--,s())},n.removeResource=function(t){if(!t.removing){t.removing=!0;var o=r.removeResource(t.id,t._etag);o.$promise.then(function(){e.success("Resource successfully removed!"),1==n.resources.length&&n.page>1&&n.page--,s()},function(r){t.removing=!1;var n="Unable to remove resource at this time.";404==r.status?n="This resource no longer exists.":412==r.status&&(n="This resource has changed since it was loaded."),e.error(n,"Error Removing Resource"),s()})}},n.isAdmin=function(){return t.isAdmin()}}angular.module("app").controller("ResourceController",e),e.$inject=["toastr","ResourceService","AuthService"]}(),function(){"use strict";function e(e,r,t,n){var s=this;function o(){var o=n.getResource(e.resourceId);o.$promise.then(function(){s.id=o._id,s.etag=o._etag,s.name=o.name,s.oldName=o.name},function(e){var n="Unable to edit resource at this time.";404==e.status&&(n="This resource no longer exists."),t.error(n,"Error Loading Resource"),r.path("resources")})}s.saving=!1,o(),s.saveResource=function(){s.saving=!0,n.saveResource(s.id,s.etag,{name:s.name}).$promise.then(function(){t.success("Resource saved!"),r.path("resources")},function(e){s.saving=!1;var r="Unable to save resource at this time.";if(404==e.status)r="This resource no longer exists.";else if(412==e.status)r="This resource has changed since it was loaded.";else if(e.data&&e.data._issues&&e.data._issues.name){-1!=e.data._issues.name.indexOf("unique")&&(r="This resource name already exists. Change the name and try again.")}t.error(r,"Error Saving Resource"),o()})}}angular.module("app").controller("EditResourceController",e),e.$inject=["$routeParams","$location","toastr","ResourceService"]}(),function(){"use strict";function e(e,r,t){var n=this;n.name="",n.adding=!1,n.addResource=function(){n.adding=!0,t.addResource({name:n.name}).$promise.then(function(){r.success("Resource successfully added!"),e.path("resources")},function(e){n.adding=!1;var t="Unable add new resource at this time.";e.data&&e.data._issues&&e.data._issues.name&&(-1!=e.data._issues.name.indexOf("unique")&&(t="This resource name already exists. Change the name and try again."));r.error(t,"Error Adding Resource")})}}angular.module("app").controller("AddResourceController",e),e.$inject=["$location","toastr","ResourceService"]}(),function(){"use strict";function e(e,r,t,n,s){var o=this;function a(){var s=n.getUser(e.userId);s.$promise.then(function(){o.id=s._id,o.etag=s._etag,o.username=s.username,o.isAdmin=s.admin},function(e){var n="Unable to change password at this time.";404==e.status&&(n="This user no longer exists."),t.error(n,"Error Loading User"),r.path("users")})}o.saving=!1,a(),o.changePassword=function(){o.saving=!0;var e={password:o.password};n.saveUser(o.id,o.etag,e).$promise.then(function(){t.success("Password changed!"),s.username()==o.username&&s.saveCredentials(o.username,o.password,o.isAdmin),r.path("users")},function(e){o.saving=!1;var r="Unable to change password at this time.";404==e.status?r="This user no longer exists.":412==e.status&&(r="This user has changed since it was loaded."),t.error(r,"Error Changing Password"),a()})}}angular.module("app").controller("ChangeUserPasswordController",e),e.$inject=["$routeParams","$location","toastr","UserService","AuthService"]}(),function(){"use strict";function e(e,r){var t="//"+r.host()+":"+r.port()+"/api/cards/:cardId";return{getCards:function(r){return e(t).get({page:r})},getCard:function(r){return e(t,{cardId:"@id"}).get({cardId:r})},saveCard:function(r,n,s){return e(t,{cardId:"@id"},{save:{method:"PATCH",headers:{"If-Match":n}}}).save({cardId:r},s)},removeCard:function(r,n){return e(t,{cardId:"@id"},{remove:{method:"DELETE",headers:{"If-Match":n}}}).remove({cardId:r})}}}angular.module("app").factory("CardService",e),e.$inject=["$resource","$location"]}(),function(){"use strict";function e(e,r,t,n){var s=this;function o(){s.loading=!0,s.errorLoading=!1;var e=t.getResources();e.$promise.then(function(){var t,n=e._items;s.resourceNames=[];for(var o=0;o<n.length;o++)s.resourceNames[n[o]._id]=n[o].name;(t=r.getCards(s.page)).$promise.then(function(){Math.ceil(t._meta.total/t._meta.max_results),s.loading=!1;for(var e=t._items,r=0;r<e.length;r++){var n=e[r].resources.split(",");e[r].resources=n}s.cards=e.reverse(),s.lastPage=t._meta.max_results*s.page>=t._meta.total},function(){s.loading=!1,s.errorLoading=!0})},function(){s.loading=!1,s.errorLoading=!0})}s.cards=[],s.resourceNames={},s.page=1,o(),s.refresh=function(){s.page=1,o()},s.next=function(){s.lastPage||(s.page++,o())},s.prev=function(){s.page>1&&(s.page--,o())},s.removeCard=function(t){if(!t.removing){t.removing=!0;var n=r.removeCard(t.id,t._etag);n.$promise.then(function(){e.success("Card successfully removed!"),1==s.cards.length&&s.page>1&&s.page--,o()},function(r){t.removing=!1;var n="Unable to remove card at this time.";404==r.status?n="This card no longer exists.":412==r.status&&(n="This card has changed since it was loaded."),e.error(n,"Error Removing Card"),o()})}},s.isAdmin=function(){return n.isAdmin()}}angular.module("app").controller("CardController",e),e.$inject=["toastr","CardService","ResourceService","AuthService"]}(),function(){"use strict";function e(e,r,t,n,s){var o=this;function a(){var a=n.getCard(e.cardId);a.$promise.then(function(){var e,n;o.id=a._id,o.etag=a._etag,o.uuid=a.uuid,o.member=a.member,e=a.resources,(n=s.getResources()).$promise.then(function(){o.resources=n._items;for(var r=0;r<o.resources.length;r++)-1!=e.indexOf(o.resources[r]._id)?o.resources[r].isAuthorized=!0:o.resources[r].isAuthorized=!1},function(e){t.error("Unable to edit card at this time.","Error Loading Card"),r.path("cards")})},function(e){var n="Unable to edit card at this time.";404==e.status&&(n="This card no longer exists."),t.error(n,"Error Loading Card"),r.path("cards")})}o.saving=!1,a(),o.saveCard=function(){o.saving=!0;for(var e=[],s=0;s<o.resources.length;s++)o.resources[s].isAuthorized&&e.push(o.resources[s]._id);var i={member:o.member,resources:e.join(",")};n.saveCard(o.id,o.etag,i).$promise.then(function(){t.success("Card Saved!"),r.path("cards")},function(e){o.saving=!1;var r="Unable to save card at this time.";404==e.status?r="This card no longer exists.":412==e.status&&(r="This card has changed since it was loaded."),t.error(r,"Error Saving Card"),a()})}}angular.module("app").controller("EditCardController",e),e.$inject=["$routeParams","$location","toastr","CardService","ResourceService"]}(),function(){"use strict";function e(e,r){var t="//"+r.host()+":"+r.port()+"/api/logs/:logId";return{getLogs:function(r){return e(t).get({sort:"-_created",page:r})},clearLogs:function(){return e(t).remove()}}}angular.module("app").factory("LogService",e),e.$inject=["$resource","$location"]}(),function(){"use strict";function e(e,r,t,n,s){var o=this;function a(){o.loading=!0,o.errorLoading=!1;var e=n.getLogs(o.page);e.$promise.then(function(){o.loading=!1,o.errorLoading=!1,o.logs=e._items;for(var r=0;r<o.logs.length;r++){var t=new Date(o.logs[r]._created);o.logs[r].date=t.toLocaleDateString()+" "+t.toLocaleTimeString()}o.lastPage=e._meta.max_results*o.page>=e._meta.total},function(){o.loading=!1,o.errorLoading=!0})}o.logs=[],o.page=1,o.clearing=!1,a(),o.refresh=function(){o.page=1,a()},o.isAdmin=function(){return s.isAdmin()},o.newer=function(){o.page>1&&(o.page--,a())},o.older=function(){o.lastPage||(o.page++,a())},o.clearLogs=function(){if(!o.clearing){o.clearing=!0;var r=n.clearLogs();r.$promise.then(function(){o.clearing=!1,e.success("Logs cleared!"),a()},function(r){o.clearing=!1,e.error("Unable to clear logs at this time."),a()})}},o.saveLogs=function(){var e=function(){for(var e="Date,UUID,Member,Resource,Status\n",r=0;r<o.logs.length;r++){var t=o.logs[r];e+=t.date+","+t.uuid.substr(5)+","+t.member+","+t.resource+","+(t.granted?"Success":t.reason)+"\n"}return e}(),n=new t([e],{type:"text/csv;charset=utf-8"});r.saveAs(n,"rfid_logs.csv")}}angular.module("app").controller("LogController",e),e.$inject=["toastr","FileSaver","Blob","LogService","AuthService"]}(),angular.module("app").config(["$locationProvider",function(e){e.hashPrefix("")}]),angular.module("app").config(["$routeProvider",function(e){e.when("/",{templateUrl:"views/home.html"}).when("/login",{templateUrl:"views/login.html",controller:"LoginController",controllerAs:"vm"}).when("/users",{templateUrl:"views/users.html",controller:"UserController",controllerAs:"vm"}).when("/adduser",{templateUrl:"views/adduser.html",controller:"AddUserController",controllerAs:"vm"}).when("/edituser/:userId",{templateUrl:"views/edituser.html",controller:"EditUserController",controllerAs:"vm"}).when("/changeuserpassword/:userId",{templateUrl:"views/changeuserpassword.html",controller:"ChangeUserPasswordController",controllerAs:"vm"}).when("/resources",{templateUrl:"views/resources.html",controller:"ResourceController",controllerAs:"vm"}).when("/addresource",{templateUrl:"views/addresource.html",controller:"AddResourceController",controllerAs:"vm"}).when("/editresource/:resourceId",{templateUrl:"views/editresource.html",controller:"EditResourceController",controllerAs:"vm"}).when("/cards",{templateUrl:"views/cards.html",controller:"CardController",controllerAs:"vm"}).when("/keycodes",{templateUrl:"views/keycodes.html",controller:"CardController",controllerAs:"vm"}).when("/editcard/:cardId",{templateUrl:"views/editcard.html",controller:"EditCardController",controllerAs:"vm"}).when("/logs",{templateUrl:"views/logs.html",controller:"LogController",controllerAs:"vm"})}]);